name: PR checks
on: pull_request
env:
  SECRET_KEY: local_development_fake_key
  DATABASE_URL: sqlite:///development.sqlite

jobs:
  run-image:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Build image
        run: DOCKER_BUILDKIT=1 docker build --tag partners.ubuntu.com .

      - name: Run image
        run: |
          docker run --detach --env SECRET_KEY=insecure_secret_key --env DATABASE_URL="sqlite:///development.sqlite" --network host partners.ubuntu.com
          sleep 1
          curl --head --fail --retry-delay 1 --retry 30 --retry-connrefused http://localhost

  run-dotrun:
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v4

      - name: Install Dotrun
        uses: canonical/install-dotrun@main

      - name: Install dependencies
        run: dotrun install

      - name: Build assets
        run: dotrun build

      - name: Run dotrun
        run: |
          dotrun & curl --head --fail --retry-delay 1 --retry 30 --retry-connrefused http://localhost:8003

  lint-python:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install python dependencies
        run: | 
          python3 -m pip install --upgrade pip
          sudo pip3 install flake8 black

      - name: Lint python
        run: yarn lint-python

  validate-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install konf
        run: |
          sudo snap install konf
          sudo chown root:root /

      - name: Install Kubeval
        run: |
          wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          sudo cp kubeval /usr/local/bin

      - name: Validate all sites
        run: |
          konf staging deploy/site.yaml | kubeval -f -
          konf production deploy/site.yaml | kubeval -f -

  test-python:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Dotrun
        uses: canonical/install-dotrun@main

      - name: Install dependencies
        run: dotrun install

      - name: Build assets
        run: dotrun build

      - name: Install dependencies
        run: dotrun exec pip3 install coverage

      - name: Run tests with coverage
        run: |
          dotrun exec coverage run ./manage.py test cms
          bash <(curl -s https://codecov.io/bash) -cF python
          
  check-inclusive-naming:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check inclusive naming
        uses: canonical-web-and-design/inclusive-naming@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          fail-on-error: true